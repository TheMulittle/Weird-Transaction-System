plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
    id 'jacoco'
    id 'info.solidsoft.pitest' version '1.5.1'
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
    compile 'io.springfox:springfox-boot-starter:3.0.0'
    compile 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.h2database:h2'
    implementation 'javax.validation:validation-api'
    implementation 'org.modelmapper:modelmapper:2.3.8'
    implementation 'commons-io:commons-io:2.7'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.0'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
    testImplementation 'org.mockito:mockito-core:2.21.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.23.0'
}

test {
	useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
  afterEvaluate {
    classDirectories.from = files(classDirectories.files.collect {
      fileTree(dir: it, exclude: [
        'com/study/demo/entity/**',
        'com/study/demo/dto/**',
        'com/study/demo/DemoApplication*'
      ])
    })
  }
}

pitest {
    junit5PluginVersion = '0.12'
    excludedTestClasses = ['**IntegrationTest**']
    excludedClasses = ['com.study.demo.entity.**', 'com.study.demo.dto.**', 'com.study.demo.configuration.**']
    threads = 4
}